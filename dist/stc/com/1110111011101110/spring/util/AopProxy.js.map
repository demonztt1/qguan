{"version":3,"sources":["../../../../../../stc/com/1110111011101110/spring/util/AopProxy.js"],"names":["AopFun","AopProxy","findFuns","key","aopFun","aopFuns","get","trapTarget","receiver","fun","after","res","Reflect","before","set","construct","argumentList","module","exports"],"mappings":";;;;;;IAEMA,M;;;;;;;iCACM,CACP;;;gCACM,CACN;;;yCACe,CAEf;;;wCACc,CAEd;;;iCACO,CAEP;;;;;;AAGH,IAAOC,WAAY;AACjBC,YADiB,oBACRC,GADQ,EACJ;AACT,YAAIC,SAAO,KAAKC,OAAL,CAAaF,GAAb,CAAX;AACA,YAAG,QAAMC,MAAT,EAAgB;AACZ,mBAAO,IAAIJ,MAAJ,EAAP;AACH;AACD,eAAOI,MAAP;AACH,KAPgB;AAQjBE,OARiB,eAQbC,UARa,EAQDJ,GARC,EAQIK,QARJ,EAQc;AAC3B,YAAIC,MAAM,KAAKP,QAAL,CAAcC,GAAd,CAAV;AACAM,YAAIC,KAAJ;AACA,YAAIC,MAAKC,QAAQN,GAAR,CAAYC,UAAZ,EAAwBJ,GAAxB,EAA6BK,QAA7B,CAAT;AACAC,YAAII,MAAJ;AACA,eAAOF,GAAP;AACC,KAdY;AAgBhBG,OAhBgB,eAgBZP,UAhBY,EAgBAJ,GAhBA,EAgBKK,QAhBL,EAgBe;AAC3B,YAAIC,MAAM,KAAKP,QAAL,CAAcC,GAAd,CAAV;AACAM,YAAIC,KAAJ;AACA,YAAIC,MAAKC,QAAQE,GAAR,CAAYP,UAAZ,EAAwBJ,GAAxB,EAA6BK,QAA7B,CAAT;AACAC,YAAII,MAAJ;AACA,eAAOF,GAAP;AACH,KAtBe;AAwBhBI,aAxBgB,qBAwBLR,UAxBK,EAwBOS,YAxBP,EAyBjB;;AAEI,YAAIL,MAAKC,QAAQG,SAAR,CAAkBR,UAAlB,EAA8BS,YAA9B,CAAT;AACA,eAAOL,GAAP;AACH;AA7BgB,CAAnB;;AAkCFM,OAAOC,OAAP,GAAiBjB,QAAjB","file":"AopProxy.js","sourcesContent":["\r\n\r\nclass AopFun{\r\n    before(){\r\n    }\r\n    after(){\r\n    }\r\n    afterReturning(){\r\n\r\n    }\r\n    afterThrowing(){\r\n\r\n    }\r\n    around(){\r\n\r\n    }\r\n}\r\n\r\n  let    AopProxy =  {\r\n    findFuns(key){\r\n        let aopFun=this.aopFuns[key];\r\n        if(null==aopFun){\r\n            return new AopFun();\r\n        }\r\n        return aopFun;\r\n    },\r\n    get(trapTarget, key, receiver) {\r\n        let fun=  this.findFuns(key);\r\n        fun.after();\r\n        let res= Reflect.get(trapTarget, key, receiver);\r\n        fun.before();\r\n        return res;\r\n        },\r\n\r\n     set(trapTarget, key, receiver) {\r\n         let fun=  this.findFuns(key);\r\n         fun.after();\r\n         let res= Reflect.set(trapTarget, key, receiver);\r\n         fun.before();\r\n         return res;\r\n     },\r\n\r\n     construct (trapTarget, argumentList )\r\n    {\r\n\r\n        let res= Reflect.construct(trapTarget, argumentList);\r\n        return res;\r\n    }\r\n\r\n\r\n}\r\n\r\nmodule.exports = AopProxy;"]}